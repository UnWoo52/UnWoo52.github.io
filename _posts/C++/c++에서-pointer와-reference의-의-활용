---
title: c++에서 \*과 \&의 활용
author: unwoo52
date: 2023-01-04 00:00:00 +09:00
categories: [C++ ]
tags: [C++, Reference]
---

# c++에서 \*과 \&의 활용

## \*의 세가지 사용처

- 변수와 상수 사이에 위치할 떄

```cpp
a * b
2 * 3
```

곱하기를 의미한다.

- 선언문에서 변수 뒤에 붙을 때

```cpp
int* num = num2;
혹은
int *num = num2;//위의 구문과 동일하다.
...

포인터 변수 선언을 의미한다.

MyClass
{
public:
	Method(int*, int)
{

...

void MyClass::Method1(int* param1, int param2)
{
	...
}
```

- 포인터 변수 앞에 붙을 때

```cpp
int* ptr = num;

cout<< *ptr;//포인터 변수가 가리키는 대상을 출력
```

포인터 변수 외에는 에러가 뜨면서 쓸 수 없다.

## \&의 세가지 사용처

- 변수와 상수 사이에 위치할 떄

비트연산을 수행한다.

- 선언시 변수 뒤에 붙을 때

```cpp
int num;

int& ref = num;
혹은
int &ref = num; //역시 위와 같은 구문이다.
```

포인터와 유사하기 때문에 헷갈리기 쉽다. 포인터는 주소를 저장하고 호출할 때 주소에 접근해 값을 가져오지만, 참조자는 주소를 담은 과정 없이 직접적으로 변수에 접근한다.

그럼 포인터와 참조자는 각각 어떤 상황에서 사용하여야 하느냐?

되도록이면 참조자를 쓰되, 필요할 때 포인터를 쓰도록 권고하고 있다고 한다.

- 변수 앞에 쓸 때

```cpp
int num = 1;
cout << &num; //print 0000007D50AFF7C4
```

num1이 저장된 메모리상의 주소를 출력해준다.


## 출저

[Blog](https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=wafter&logNo=140037184130)
